---
import { t, type Language } from '../i18n/config';
import LanguagePicker from './LanguagePicker.astro';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;

const links = [
  { href: '/services', label: t('nav.services', lang) },
  { href: '/portfolio', label: t('nav.portfolio', lang) },
  { href: '/a-propos', label: t('nav.about', lang) },
  { href: '/blog', label: t('nav.blog', lang) },
  { href: '/contact', label: t('nav.contact', lang) }
];

const currentPath = Astro.url.pathname.replace(/^\/[a-z]{2}/, '');
---

<header class="fixed w-full bg-ivory/80 backdrop-blur-md z-50 border-b border-silk">
  <nav class="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">
    <a href={`/${lang}`} class="hover-lift">
      <img 
        src="/foxyline-logo.png" 
        alt="Foxyline" 
        class="h-8 w-auto"
        width="150"
        height="48"
      />
    </a>
    
    <div class="hidden md:flex items-center gap-8">
      {links.map(link => (
        <a 
          href={`/${lang}${link.href}`}
          class="font-poppins text-charcoal hover:text-fox transition-colors relative after:absolute after:bottom-0 after:left-0 after:w-0 after:h-0.5 after:bg-fox after:transition-all after:duration-300 hover:after:w-full"
        >
          {link.label}
        </a>
      ))}
      <LanguagePicker currentPath={currentPath} />
      <a 
        href={`/${lang}/contact`}
        class="px-6 py-2 bg-fox text-white font-poppins rounded-lg hover:bg-arctic transition-all duration-300 shadow-sm hover:shadow-md hover-lift"
      >
        {t('nav.quote', lang)}
      </a>
    </div>

    <button 
      id="menuButton"
      class="md:hidden text-charcoal hover:text-fox transition-colors"
      aria-label="Menu"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
      </svg>
    </button>
  </nav>

  <!-- Mobile Menu -->
  <div 
    id="mobileMenu" 
    class="fixed inset-0 bg-charcoal/95 backdrop-blur-md transform translate-x-full transition-transform duration-300 md:hidden"
  >
    <div class="h-full flex flex-col">
      <div class="flex justify-between items-center p-6">
        <img 
          src="/foxyline-logo.webp" 
          alt="Foxyline" 
          class="h-8 w-auto brightness-0 invert"
          width="100"
          height="32"
        />
        <button 
          id="closeMenu"
          class="text-white hover:text-fox transition-colors"
          aria-label="Fermer le menu"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <div class="flex flex-col gap-6 p-6">
        {links.map(link => (
          <a 
            href={`/${lang}${link.href}`}
            class="text-2xl font-poppins text-white hover:text-fox transition-colors hover-lift"
          >
            {link.label}
          </a>
        ))}
        <div class="py-4">
          <LanguagePicker currentPath={currentPath} />
        </div>
        <a 
          href={`/${lang}/contact`}
          class="mt-4 px-6 py-3 bg-fox text-white font-poppins text-xl text-center rounded-lg hover:bg-arctic transition-colors shadow-lg hover-lift"
        >
          {t('nav.quote', lang)}
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  const menuButton = document.getElementById('menuButton');
  const closeMenu = document.getElementById('closeMenu');
  const mobileMenu = document.getElementById('mobileMenu');
  
  const toggleMenu = () => {
    const isOpen = mobileMenu?.classList.contains('translate-x-0');
    if (isOpen) {
      mobileMenu?.classList.remove('translate-x-0');
      mobileMenu?.classList.add('translate-x-full');
      document.body.classList.remove('overflow-hidden');
    } else {
      mobileMenu?.classList.add('translate-x-0');
      mobileMenu?.classList.remove('translate-x-full');
      document.body.classList.add('overflow-hidden');
    }
  };

  menuButton?.addEventListener('click', toggleMenu);
  closeMenu?.addEventListener('click', toggleMenu);
</script>