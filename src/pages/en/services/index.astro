---
import Layout from '../../../layouts/Layout.astro';
import { t } from '../../../i18n/config';
import FoxDecorations from '../../../components/FoxDecorations.astro';

const lang = 'en';

// Process features to ensure they're always in a mappable format regardless of language
const processFeatures = (value: any): any[] => {
  if (Array.isArray(value)) return value;
  if (typeof value === 'string') return [value];
  if (typeof value === 'object' && value !== null) {
    return Object.values(value);
  }
  return [];
};

const features = {
  showcase: processFeatures(t('services.showcase.features', lang)),
  landing: processFeatures(t('services.landing.features', lang)),
  redesign: processFeatures(t('services.redesign.features', lang)),
  seo: processFeatures(t('services.seo.features', lang))
};

const stats = [
  { value: '98%', label: 'Client Satisfaction' },
  { value: '100+', label: 'Projects Completed' },
  { value: '3s', label: 'Average Load Time' },
  { value: '24h', label: 'Support Response' }
];

const technologies = [
  'React', 'Vue.js', 'Next.js', 'Astro', 'TailwindCSS', 'TypeScript',
  'Node.js', 'PostgreSQL', 'Supabase', 'AWS', 'Netlify', 'Vercel'
];
---

<Layout title="Our Services | Foxyline" lang={lang}>
  <main class="pt-32">
    <!-- Hero Section -->
    <section class="relative py-20 px-4 md:px-8 modern-gradient overflow-hidden">
      <div class="mesh-overlay"></div>
      <FoxDecorations variant="light" />
      
      <!-- Animated Background Elements -->
      <div class="absolute inset-0 overflow-hidden">
        <div class="absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-radial from-fox-500/10 to-transparent rounded-full blur-3xl animate-float"></div>
        <div class="absolute bottom-1/4 right-1/4 w-96 h-96 bg-gradient-radial from-neon-500/10 to-transparent rounded-full blur-3xl animate-float" style="animation-delay: -2s;"></div>
      </div>

      <div class="max-w-6xl mx-auto relative">
        <div class="text-center">
          <h1 
            class="text-4xl md:text-6xl lg:text-7xl font-bold mb-6"
            data-aos="fade-up"
          >
            {t('services.title', lang)}
            <span class="gradient-text block mt-2">{t('services.subtitle', lang)}</span>
          </h1>
          <p 
            class="text-xl md:text-2xl max-w-2xl mx-auto mb-12 text-modern-200/90"
            data-aos="fade-up"
            data-aos-delay="100"
          >
            {t('services.description', lang)}
          </p>
        </div>

        <!-- Stats Grid -->
        <div 
          class="grid grid-cols-2 md:grid-cols-4 gap-6 mt-16"
          data-aos="fade-up"
          data-aos-delay="200"
        >
          {stats.map(stat => (
            <div class="glass-card p-6 rounded-xl text-center hover:scale-105 transform transition-all duration-500">
              <p class="text-3xl font-bold text-fox-500 mb-2">{stat.value}</p>
              <p class="text-modern-200/80 text-sm">{stat.label}</p>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Services Grid -->
    <section class="relative py-32 px-4 md:px-8 bg-matrix-900 overflow-hidden">
      <div class="mesh-overlay opacity-10"></div>
      <FoxDecorations variant="light" />
      
      <div class="max-w-6xl mx-auto grid md:grid-cols-2 gap-8">
        <!-- Business Websites -->
        <div 
          class="glass-card p-8 rounded-xl hover:scale-105 transform transition-all duration-500 hover:shadow-xl hover:shadow-fox-500/10 group"
          data-aos="fade-up"
        >
          <div class="w-16 h-16 bg-fox-500 rounded-xl flex items-center justify-center mb-6 group-hover:rotate-12 transition-transform duration-500">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 text-modern-50">
              <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-modern-50 mb-2">{t('services.showcase.title', lang)}</h2>
          <p class="text-fox font-space mb-4">{t('services.showcase.subtitle', lang)}</p>
          <p class="text-modern-200/80 mb-6">{t('services.showcase.description', lang)}</p>
          <ul class="space-y-3">
            {features.showcase.map((feature) => (
              <li class="flex items-center gap-3">
                <div class="w-5 h-5 rounded-full bg-fox-500/10 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-3 h-3 text-fox-500">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                  </svg>
                </div>
                <span class="text-modern-200/80">{feature}</span>
              </li>
            ))}
          </ul>
        </div>

        <!-- Landing Pages -->
        <div 
          class="glass-card p-8 rounded-xl hover:scale-105 transform transition-all duration-500 hover:shadow-xl hover:shadow-neon-500/10 group"
          data-aos="fade-up"
          data-aos-delay="100"
        >
          <div class="w-16 h-16 bg-neon-500 rounded-xl flex items-center justify-center mb-6 group-hover:rotate-12 transition-transform duration-500">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 text-matrix-900">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zM12 2.25V4.5m5.834.166l-1.591 1.591M20.25 10.5H18M7.757 14.743l-1.59 1.59M6 10.5H3.75m4.007-4.243l-1.59-1.59" />
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-modern-50 mb-2">{t('services.landing.title', lang)}</h2>
          <p class="text-neon-500 font-space mb-4">{t('services.landing.subtitle', lang)}</p>
          <p class="text-modern-200/80 mb-6">{t('services.landing.description', lang)}</p>
          <ul class="space-y-3">
            {features.landing.map((feature) => (
              <li class="flex items-center gap-3">
                <div class="w-5 h-5 rounded-full bg-neon-500/10 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-3 h-3 text-neon-500">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                  </svg>
                </div>
                <span class="text-modern-200/80">{feature}</span>
              </li>
            ))}
          </ul>
        </div>

        <!-- Redesign -->
        <div 
          class="glass-card p-8 rounded-xl hover:scale-105 transform transition-all duration-500 hover:shadow-xl hover:shadow-accent-500/10 group"
          data-aos="fade-up"
          data-aos-delay="200"
        >
          <div class="w-16 h-16 bg-accent-500 rounded-xl flex items-center justify-center mb-6 group-hover:rotate-12 transition-transform duration-500">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 text-modern-50">
              <path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99" />
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-modern-50 mb-2">{t('services.redesign.title', lang)}</h2>
          <p class="text-accent-500 font-space mb-4">{t('services.redesign.subtitle', lang)}</p>
          <p class="text-modern-200/80 mb-6">{t('services.redesign.description', lang)}</p>
          <ul class="space-y-3">
            {features.redesign.map((feature) => (
              <li class="flex items-center gap-3">
                <div class="w-5 h-5 rounded-full bg-accent-500/10 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-3 h-3 text-accent-500">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                  </svg>
                </div>
                <span class="text-modern-200/80">{feature}</span>
              </li>
            ))}
          </ul>
        </div>

        <!-- SEO & Visibility -->
        <div 
          class="glass-card p-8 rounded-xl hover:scale-105 transform transition-all duration-500 hover:shadow-xl hover:shadow-fox-500/10 group"
          data-aos="fade-up"
          data-aos-delay="300"
        >
          <div class="w-16 h-16 bg-fox-500 rounded-xl flex items-center justify-center mb-6 group-hover:rotate-12 transition-transform duration-500">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 text-modern-50">
              <path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
            </svg>
          </div>
          <h2 class="text-2xl font-bold text-modern-50 mb-2">{t('services.seo.title', lang)}</h2>
          <p class="text-fox font-space mb-4">{t('services.seo.subtitle', lang)}</p>
          <p class="text-modern-200/80 mb-6">{t('services.seo.description', lang)}</p>
          <ul class="space-y-3">
            {features.seo.map((feature) => (
              <li class="flex items-center gap-3">
                <div class="w-5 h-5 rounded-full bg-fox-500/10 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-3 h-3 text-fox-500">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5" />
                  </svg>
                </div>
                <span class="text-modern-200/80">{feature}</span>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </section>

    <!-- Technologies Section -->
    <section class="relative py-32 px-4 md:px-8 bg-matrix-950 overflow-hidden">
      <div class="mesh-overlay opacity-10"></div>
      <FoxDecorations variant="light" />
      
      <div class="max-w-6xl mx-auto relative">
        <h2 
          class="text-3xl md:text-5xl font-bold mb-16 text-center"
          data-aos="fade-up"
        >
          Technologies We Use
          <span class="gradient-text block mt-2">Modern Stack for Modern Solutions</span>
        </h2>

        <div 
          class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4"
          data-aos="fade-up"
          data-aos-delay="100"
        >
          {technologies.map((tech) => (
            <div class="glass-card p-4 rounded-lg text-center hover:scale-105 transform transition-all duration-500">
              <p class="text-modern-200/90 font-space">{tech}</p>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="relative py-32 px-4 md:px-8 bg-matrix-900 overflow-hidden">
      <div class="mesh-overlay opacity-10"></div>
      <FoxDecorations variant="light" />
      
      <div class="max-w-4xl mx-auto text-center relative">
        <div 
          class="absolute -top-12 left-1/2 transform -translate-x-1/2 w-24 h-24 text-fox-500 opacity-10"
          data-aos="fade-down"
        >
          <svg viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 2L9 7H3L6 12L3 17H9L12 22L15 17H21L18 12L21 7H15L12 2Z" />
          </svg>
        </div>
        
        <h2 
          class="text-3xl md:text-5xl font-bold mb-6 text-modern-50"
          data-aos="fade-up"
        >
          {t('cta.title', lang)}
        </h2>
        <p 
          class="text-xl text-modern-200/90 mb-12 leading-relaxed"
          data-aos="fade-up"
          data-aos-delay="100"
        >
          {t('cta.description', lang)}
        </p>
        <div 
          class="flex flex-col sm:flex-row gap-6 justify-center items-center"
          data-aos="fade-up"
          data-aos-delay="200"
        >
          <a 
            href={`/${lang}/contact`}
            class="group relative px-8 py-4 bg-gradient-to-r from-fox-500 to-neon-500 text-modern-50 font-space text-lg rounded-xl hover:shadow-2xl hover:shadow-fox-500/20 transition-all duration-500 overflow-hidden"
          >
            <span class="relative z-10 flex items-center gap-2">
              {t('cta.quote', lang)}
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 transition-transform duration-500 group-hover:translate-x-1">
                <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
              </svg>
            </span>
            <div class="absolute inset-0 bg-gradient-to-r from-neon-500 to-fox-500 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
          </a>

          <a 
            href={`/${lang}/portfolio`}
            class="group px-8 py-4 bg-matrix-800/50 backdrop-blur-sm border border-modern-100/10 text-modern-100 font-space text-lg rounded-xl hover:bg-matrix-800/70 hover:border-modern-100/20 transition-all duration-500 hover:shadow-xl"
          >
            <span class="relative z-10 group-hover:text-modern-50 transition-colors duration-500">{t('cta.portfolio', lang)}</span>
          </a>
        </div>
      </div>
    </section>
  </main>
</Layout>
```